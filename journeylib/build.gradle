apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.sonarqube'
apply plugin: 'maven-publish'
apply from: '../jacoco.gradle'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "3.0-SNAPSHOT"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

sonarqube {
    properties {
        property 'sonar.projectName', 'testing-demo'
        property 'sonar.projectKey', 'testing-demo'
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.login', 'admin'
        property 'sonar.password', 'admin'

        property 'sonar.sources', 'src/main/java'
        property 'sonar.sourcesEncoding', 'UTF-8'

        property 'sonar.java.binaries', 'build/intermediates/javac'
        property 'sonar.kotlin.binaries', 'build/tmp/kotlin-classes'

        property 'sonar.java.coveragePlugin', 'jacoco'
        property 'sonar.kotlin.coveragePlugin', 'jacoco'

        property 'sonar.tests', ['src/test/java', 'src/androidTest/java']
        property 'sonar.junit.reportsPath', 'build/reports/tests'
        property 'sonar.jacoco.reportsPath', 'build/reports/tests'
        property 'sonar.coverage.jacoco.xmlReportsPaths', 'build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'

        property 'sonar.androidLint.reportPaths', 'build/reports/lint-results.xml'
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release
                groupId = 'com.testdemo.libs'
                artifactId = 'journeylib'
                version = android.defaultConfig.versionName
                artifact(sourceJar)
            }
        }

        repositories {
            maven {
                // change to point to your repo
                def releasesRepoUrl = layout.projectDirectory.dir('repos/releases')
                def snapshotsRepoUrl = layout.projectDirectory.dir('repos/snapshots')
                println version = publications.release.version
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}